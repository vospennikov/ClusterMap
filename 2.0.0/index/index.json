{"interfaceLanguages":{"swift":[{"children":[{"title":"Classes","type":"groupMarker"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/clustermap\/clustermanager\/clusterannotation\/==(_:_:)","title":"static func == (ClusterManager<Annotation>.ClusterAnnotation, ClusterManager<Annotation>.ClusterAnnotation) -> Bool","type":"op"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/clustermap\/clustermanager\/clusterannotation\/coordinate","title":"let coordinate: CLLocationCoordinate2D","type":"property"},{"path":"\/documentation\/clustermap\/clustermanager\/clusterannotation\/id","title":"let id: UUID","type":"property"},{"path":"\/documentation\/clustermap\/clustermanager\/clusterannotation\/memberannotations","title":"let memberAnnotations: [Annotation]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/clustermap\/clustermanager\/clusterannotation\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/clustermap\/clustermanager\/clusterannotation\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/clustermap\/clustermanager\/clusterannotation\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/clustermap\/clustermanager\/clusterannotation","title":"ClusterManager.ClusterAnnotation","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/clustermap\/clustermanager\/configuration\/init(maxzoomlevel:mincountforclustering:shouldremoveinvisibleannotations:shoulddistributeannotationsonsamecoordinate:distancefromcontestedlocation:clusterposition:cellsizeforzoomlevel:)","title":"init(maxZoomLevel: Double, minCountForClustering: Int, shouldRemoveInvisibleAnnotations: Bool, shouldDistributeAnnotationsOnSameCoordinate: Bool, distanceFromContestedLocation: Double, clusterPosition: ClusterAlignment, cellSizeForZoomLevel: (Int) -> CGSize)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/clustermap\/clustermanager\/configuration\/cellsizeforzoomlevel","title":"let cellSizeForZoomLevel: (Int) -> CGSize","type":"property"},{"path":"\/documentation\/clustermap\/clustermanager\/configuration\/clusterposition","title":"let clusterPosition: ClusterAlignment","type":"property"},{"path":"\/documentation\/clustermap\/clustermanager\/configuration\/distancefromcontestedlocation","title":"let distanceFromContestedLocation: Double","type":"property"},{"path":"\/documentation\/clustermap\/clustermanager\/configuration\/maxzoomlevel","title":"let maxZoomLevel: Double","type":"property"},{"path":"\/documentation\/clustermap\/clustermanager\/configuration\/mincountforclustering","title":"let minCountForClustering: Int","type":"property"},{"path":"\/documentation\/clustermap\/clustermanager\/configuration\/shoulddistributeannotationsonsamecoordinate","title":"let shouldDistributeAnnotationsOnSameCoordinate: Bool","type":"property"},{"path":"\/documentation\/clustermap\/clustermanager\/configuration\/shouldremoveinvisibleannotations","title":"let shouldRemoveInvisibleAnnotations: Bool","type":"property"}],"path":"\/documentation\/clustermap\/clustermanager\/configuration","title":"ClusterManager.Configuration","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/clustermap\/clustermanager\/difference\/insertions","title":"var insertions: [ClusterManager<Annotation>.AnnotationType]","type":"property"},{"path":"\/documentation\/clustermap\/clustermanager\/difference\/removals","title":"var removals: [ClusterManager<Annotation>.AnnotationType]","type":"property"}],"path":"\/documentation\/clustermap\/clustermanager\/difference","title":"ClusterManager.Difference","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/clustermap\/clustermanager\/init(configuration:)","title":"init(configuration: ClusterManager<Annotation>.Configuration)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/clustermap\/clustermanager\/visibleannotations","title":"var visibleAnnotations: [ClusterManager<Annotation>.AnnotationType]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/clustermap\/clustermanager\/add(_:)-75vyu","title":"func add(Annotation)","type":"method"},{"path":"\/documentation\/clustermap\/clustermanager\/add(_:)-8cj6n","title":"func add([Annotation])","type":"method"},{"path":"\/documentation\/clustermap\/clustermanager\/fetchallannotations()","title":"func fetchAllAnnotations() -> [Annotation]","type":"method"},{"path":"\/documentation\/clustermap\/clustermanager\/fetchvisiblenestedannotations()","title":"func fetchVisibleNestedAnnotations() -> [Annotation]","type":"method"},{"path":"\/documentation\/clustermap\/clustermanager\/reload(mapviewsize:coordinateregion:)","title":"func reload(mapViewSize: CGSize, coordinateRegion: MKCoordinateRegion) async -> ClusterManager<Annotation>.Difference","type":"method"},{"path":"\/documentation\/clustermap\/clustermanager\/reload(mkmapview:)","title":"func reload(mkMapView: MKMapView) async","type":"method"},{"path":"\/documentation\/clustermap\/clustermanager\/remove(_:)-5pg6e","title":"func remove([Annotation])","type":"method"},{"path":"\/documentation\/clustermap\/clustermanager\/remove(_:)-9xng","title":"func remove(Annotation)","type":"method"},{"path":"\/documentation\/clustermap\/clustermanager\/removeall()","title":"func removeAll()","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/clustermap\/clustermanager\/annotationtype\/==(_:_:)","title":"static func == (ClusterManager<Annotation>.AnnotationType, ClusterManager<Annotation>.AnnotationType) -> Bool","type":"op"},{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/clustermap\/clustermanager\/annotationtype\/annotation(_:)","title":"case annotation(Annotation)","type":"case"},{"path":"\/documentation\/clustermap\/clustermanager\/annotationtype\/cluster(_:)","title":"case cluster(ClusterManager<Annotation>.ClusterAnnotation)","type":"case"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/clustermap\/clustermanager\/annotationtype\/id","title":"var id: ClusterManager<Annotation>.AnnotationType","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/clustermap\/clustermanager\/annotationtype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/clustermap\/clustermanager\/annotationtype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/clustermap\/clustermanager\/annotationtype","title":"ClusterManager.AnnotationType","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/clustermap\/clustermanager\/assertisolated(_:file:line:)","title":"func assertIsolated(() -> String, file: StaticString, line: UInt)","type":"method"},{"path":"\/documentation\/clustermap\/clustermanager\/assumeisolated(_:file:line:)","title":"func assumeIsolated<T>((isolated Self) throws -> T, file: StaticString, line: UInt) rethrows -> T","type":"method"},{"path":"\/documentation\/clustermap\/clustermanager\/preconditionisolated(_:file:line:)","title":"func preconditionIsolated(() -> String, file: StaticString, line: UInt)","type":"method"}],"path":"\/documentation\/clustermap\/clustermanager\/actor-implementations","title":"Actor Implementations","type":"symbol"}],"path":"\/documentation\/clustermap\/clustermanager","title":"ClusterManager","type":"class"},{"title":"Protocols","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/clustermap\/clusteralignmentstrategy\/calculateposition(for:within:)","title":"func calculatePosition(for: [CLLocationCoordinate2D], within: MKMapRect) -> CLLocationCoordinate2D","type":"method"}],"path":"\/documentation\/clustermap\/clusteralignmentstrategy","title":"ClusterAlignmentStrategy","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/clustermap\/coordinateidentifiable\/coordinate","title":"var coordinate: CLLocationCoordinate2D","type":"property"},{"children":[{"children":[{"path":"\/documentation\/clustermap\/coordinateidentifiable\/shouldcluster-417h3","title":"var shouldCluster: Bool","type":"property"}],"title":"CoordinateIdentifiable Implementations","type":"groupMarker"}],"path":"\/documentation\/clustermap\/coordinateidentifiable\/shouldcluster-3apda","title":"var shouldCluster: Bool","type":"property"}],"path":"\/documentation\/clustermap\/coordinateidentifiable","title":"CoordinateIdentifiable","type":"protocol"},{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/clustermap\/clusteralignment\/init(alignmentstrategy:)","title":"init(alignmentStrategy: ClusterAlignmentStrategy)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/clustermap\/clusteralignment\/calculateposition(for:within:)","title":"func calculatePosition(for: [CLLocationCoordinate2D], within: MKMapRect) -> CLLocationCoordinate2D","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/clustermap\/clusteralignment\/average","title":"static let average: ClusterAlignment","type":"property"},{"path":"\/documentation\/clustermap\/clusteralignment\/center","title":"static let center: ClusterAlignment","type":"property"},{"path":"\/documentation\/clustermap\/clusteralignment\/first","title":"static let first: ClusterAlignment","type":"property"},{"path":"\/documentation\/clustermap\/clusteralignment\/nearcenter","title":"static let nearCenter: ClusterAlignment","type":"property"}],"path":"\/documentation\/clustermap\/clusteralignment","title":"ClusterAlignment","type":"struct"},{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/clustermap\/==(_:_:)","title":"func == (CLLocationCoordinate2D, CLLocationCoordinate2D) -> Bool","type":"op"},{"title":"Extended Modules","type":"groupMarker"},{"children":[{"title":"Extended Structures","type":"groupMarker"},{"children":[{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/clustermap\/corelocation\/cllocationcoordinate2d\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/clustermap\/corelocation\/cllocationcoordinate2d\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/clustermap\/corelocation\/cllocationcoordinate2d\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/clustermap\/corelocation\/cllocationcoordinate2d\/hashable-implementations","title":"Hashable Implementations","type":"symbol"}],"path":"\/documentation\/clustermap\/corelocation\/cllocationcoordinate2d","title":"CLLocationCoordinate2D","type":"extension"}],"path":"\/documentation\/clustermap\/corelocation","title":"CoreLocation","type":"extension"}],"path":"\/documentation\/clustermap","title":"ClusterMap","type":"module"}]},"schemaVersion":{"major":0,"minor":1,"patch":1}}